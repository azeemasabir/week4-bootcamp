# 💰 2. Expense Tracker App Overview

## ⚙️ Project Structure

```
expense-tracker/
│── app.py         # creates Flask app and DB
│── models.py      # Expense model (id, amount, category, desc, date)
│── routes.py      # all routes (index, add, delete, report)
│── templates/
│     ├── layout.html  # base layout
│     ├── index.html   # dashboard
│     └── report.html  # charts
```

## 🔄 Flow

1. **User visits `/` (Dashboard)**

   * `index()` route checks query param `month`.
   * Fetches expenses from DB for that month.
   * Passes list + total to `index.html`.

2. **Add expense**

   * Form POSTs to `/add`.
   * `add()` route validates input, saves to DB, redirects to `/`.

3. **Delete expense**

   * `/delete/<id>` finds and deletes the record, reloads dashboard.

4. **Reports**

   * `/report?month=YYYY-MM` runs queries:

     * **Pie Chart**: expenses grouped by category.
     * **Line Chart**: expenses grouped by day.
   * Sends that data to `report.html`.
   * Chart.js renders interactive graphs.

---

## 🗂️ Diagram (Expense Tracker)

```
Browser (User)
   |
   |   (GET / , POST /add , GET /report)
   v
Flask Routes (index, add, delete, report)
   |
   |   (SQLAlchemy ORM)
   v
Database (SQLite: expenses table)
   |
   |   (Query Results)
   v
Templates (index.html, report.html)
   |         ^
   |         |   (JS renders charts with Chart.js)
   v         |
Browser (Rendered HTML + Charts)
```